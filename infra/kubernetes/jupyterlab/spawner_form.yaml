apiVersion: v1
kind: ConfigMap
metadata:
  name: spawner-form
  namespace: jhub
data:
  form.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <meta charset="utf-8">
        <title>JupyterLab Server Options</title>
        <style>
            label { display: block; margin-top: 1em; font-weight: bold; }
            select, input { width: 100%; padding: 6px; border-radius: 4px; border: 1px solid #ccc; }
            fieldset { border: 1px solid #ccc; border-radius: 6px; padding: 10px; }
            legend { font-weight: bold; padding: 0 5px; }
            .start, .form-actions,
            button[type="submit"].start,
            .submit-button,
            .feedback-container {
            display: none !important;
            }
            .center-button {
            display: flex;
            justify-content: center;
            margin-top: 20px;
            }
            .start-button {
                background-color: #f97316;
                color: white;
                padding: 10px 20px;
                border-radius: 6px;
                border: none;
                font-weight: bold;
            }
        </style>
            <script>
                window.onload = async function () {
                    await loadNodes();

                    const defaultBtn = document.querySelector('.feedback-container');
                    if (defaultBtn) {
                    defaultBtn.remove();
                    }
                };
                async function loadNodes() {
                    const select = document.getElementById("node-select");
                    select.innerHTML = "<option disabled selected>Loading nodes...</option>";
                    try {
                        const res = await fetch("/hub/api/available-nodes");
                        const nodes = await res.json();
                        if (nodes.length === 0) {
                            select.innerHTML = "<option disabled>No nodes available</option>";
                            return;
                        }
                        select.innerHTML = "";
                        for (const node of nodes) {
                            const hostname = node.hostname || "unknown";
                            const gpu = node.has_gpu ? "ðŸŸ¢ GPU" : "âšª CPU";
                            const cpu = parseFloat(node.cpu_usage_percent || 0).toFixed(1);
                            const ramUsed = parseFloat(node.memory_used_gb || 0).toFixed(1);
                            const ramTotal = parseFloat(node.memory_total_gb || 0).toFixed(1);
                            const ram = `${ramUsed}/${ramTotal}GB`;
                            const opt = document.createElement("option");
                            opt.value = hostname;
                            opt.innerText = `${hostname} - ${gpu} | CPU: ${cpu}% | RAM: ${ram}`;
                            select.appendChild(opt);
                        }
                    } catch (e) {
                        select.innerHTML = `<option disabled>Error fetching node list</option>`;
                        console.error("Node fetch failed:", e);
                    }
                }
            </script>
    </head>
    <body>
        <form action="{{ url }}" method="post">
            <fieldset>
            <legend>Server Configuration</legend>

            <label for="node">Pilih Node:</label>
            <select name="node" id="node-select" required>
                <option disabled>Loading...</option>
            </select>
            <label for="image">Docker Image:</label>
            <select name="image" required>
                <option value="danielcristh0/jupyterlab:cpu">JupyterLab CPU</option>
                <option value="danielcristh0/jupyterlab:rpl">JupyterLab GPU (PyTorch)</option>
                <option value="danielcristh0/jupyterlab:cu121">JupyterLab CUDA 12.1</option>
                <option value="danielcristh0/jupyterlab:tf">JupyterLab TensorFlow</option>
            </select>
            <br><br>
                <button type="submit" class="start-button">
                Start Server
            </button>
            </fieldset>
        </form>
    </body>
    </html>
