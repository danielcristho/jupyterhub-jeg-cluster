"""Initial migration

Revision ID: f44c05908385
Revises: 
Create Date: 2025-06-07 02:07:01.346686

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f44c05908385'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_nodes_hostname', table_name='nodes')
    op.drop_table('nodes')
    op.drop_index('ix_deployments_profile_id', table_name='deployments')
    op.drop_index('ix_deployments_status', table_name='deployments')
    op.drop_index('ix_deployments_user_id', table_name='deployments')
    op.drop_table('deployments')
    op.add_column('profiles', sa.Column('node_count', sa.Integer(), nullable=True))
    op.add_column('profiles', sa.Column('cpu_requirement', sa.Float(), nullable=True))
    op.add_column('profiles', sa.Column('memory_requirement', sa.Float(), nullable=True))
    op.add_column('profiles', sa.Column('gpu_required', sa.Boolean(), nullable=True))
    op.add_column('profiles', sa.Column('max_cpu_usage', sa.Integer(), nullable=True))
    op.add_column('profiles', sa.Column('max_memory_usage', sa.Integer(), nullable=True))
    op.add_column('profiles', sa.Column('max_active_containers', sa.Integer(), nullable=True))
    op.alter_column('profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('profiles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('profiles', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index('ix_profiles_user_id', table_name='profiles')
    op.drop_constraint('uq_user_profile_name', 'profiles', type_='unique')
    op.create_unique_constraint(None, 'profiles', ['name'])
    op.drop_constraint('profiles_user_id_fkey', 'profiles', type_='foreignkey')
    op.drop_column('profiles', 'is_default')
    op.drop_column('profiles', 'config')
    op.drop_column('profiles', 'user_id')
    op.drop_column('profiles', 'profile_type')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('profiles', sa.Column('profile_type', postgresql.ENUM('single_node', 'multi_node', name='profile_type_enum'), autoincrement=False, nullable=False))
    op.add_column('profiles', sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False))
    op.add_column('profiles', sa.Column('config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('profiles', sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_foreign_key('profiles_user_id_fkey', 'profiles', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'profiles', type_='unique')
    op.create_unique_constraint('uq_user_profile_name', 'profiles', ['user_id', 'name'])
    op.create_index('ix_profiles_user_id', 'profiles', ['user_id'], unique=False)
    op.alter_column('profiles', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('profiles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('profiles', 'max_active_containers')
    op.drop_column('profiles', 'max_memory_usage')
    op.drop_column('profiles', 'max_cpu_usage')
    op.drop_column('profiles', 'gpu_required')
    op.drop_column('profiles', 'memory_requirement')
    op.drop_column('profiles', 'cpu_requirement')
    op.drop_column('profiles', 'node_count')
    op.create_table('deployments',
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('profile_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('session_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'running', 'stopped', 'failed', 'completed', name='deployment_status_enum'), autoincrement=False, nullable=False),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('assigned_nodes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('container_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name='deployments_profile_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='deployments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='deployments_pkey'),
    sa.UniqueConstraint('user_id', 'session_name', name='uq_user_session_name')
    )
    op.create_index('ix_deployments_user_id', 'deployments', ['user_id'], unique=False)
    op.create_index('ix_deployments_status', 'deployments', ['status'], unique=False)
    op.create_index('ix_deployments_profile_id', 'deployments', ['profile_id'], unique=False)
    op.create_table('nodes',
    sa.Column('hostname', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('last_seen', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('node_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='nodes_pkey')
    )
    op.create_index('ix_nodes_hostname', 'nodes', ['hostname'], unique=True)
    op.create_table('users',
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    # ### end Alembic commands ###
